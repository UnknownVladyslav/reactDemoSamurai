{"version":3,"sources":["components/Dialogs/DialogItem/DialogItem.js","components/Dialogs/Message/Message.js","components/Dialogs/DialogsForm/DialogsForm.js","components/Dialogs/Dialogs.js","hoc/WithAuthRedirect.js","components/Dialogs/DialogsContainer.js"],"names":["DialogItem","props","path","id","className","classes","dialogItem","active","to","name","Message","messageItem","message","maxLength50","maxLengthCreator","DialogsReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","placeholder","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","dialogsItems","messageItems","values","sendMessage","dialogAddMessageForm","mapStateToPropsForRedirect","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","React","connect","DialogsContainer","compose","dispatch","addMessageActionCreator"],"mappings":"oLAaeA,EARI,SAAAC,GACf,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OAAO,qBAAKC,UAAWC,IAAQC,WAAa,GAAKD,IAAQE,OAAlD,SACH,eAAC,IAAD,CAASC,GAAIN,EAAb,cAAsBD,EAAMQ,KAA5B,UCAOC,EANC,SAAAT,GACZ,OACI,sBAAKG,UAAWC,IAAQM,YAAxB,cAAwCV,EAAMW,QAA9C,Q,iCCAFC,EAAcC,YAAiB,IAkBtBC,EAFUC,YAAU,CAACC,KAAM,wBAAjBD,EAdF,SAAAf,GAEnB,OACI,8BACI,uBAAMiB,SAAUjB,EAAMkB,aAAtB,UACI,8BACI,cAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUC,SAAU,CAACV,GAAcJ,KAAM,uBAAwBe,YAAa,yBAEpG,0DC2BDC,EApCC,SAAAxB,GACZ,IAAIyB,EAAQzB,EAAM0B,YAEdC,EAAkBF,EAAMG,QACvBC,KAAK,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAYtB,KAAMsB,EAAEtB,KAAiBN,GAAI4B,EAAE5B,IAAZ4B,EAAE5B,OAG5C6B,EAAmBN,EAAMO,SACxBH,KAAK,SAAAI,GAAC,OAAI,cAAC,EAAD,CAAStB,QAASsB,EAAEtB,SAAcsB,EAAE/B,OASnD,OACI,sBAAKC,UAAWC,IAAQoB,QAAxB,UACI,qBAAKrB,UAAWC,IAAQ8B,aAAxB,SACMP,IAIN,qBAAKxB,UAAWC,IAAQ4B,SAAxB,SACI,qBAAK7B,UAAWC,IAAQ+B,aAAxB,SACI,8BAAMJ,QAGN,8BACA,cAAC,EAAD,CAAkBd,SAnBd,SAAAmB,GAChBpC,EAAMqC,YAAYD,EAAOE,+B,gECdzBC,EAA6B,SAAAd,GAAK,MAAK,CACvCe,OAAQf,EAAMgB,KAAKD,SAkBZE,EAfiB,SAAAC,GAAc,IAEpCC,EAFmC,uKAIjC,OAAKC,KAAK7C,MAAMwC,OAET,cAACG,EAAD,eAAeE,KAAK7C,QAFI,cAAC,IAAD,CAAUO,GAAI,eAJZ,GAETuC,IAAMH,WAUtC,OAFqCI,YAAQR,EAARQ,CAAoCH,I,OCQvEI,EAAmBC,YACrBF,aAlBkB,SAACtB,GACnB,MAAO,CACJC,YAAaD,EAAMC,gBAID,SAAAwB,GACrB,MAAO,CAIHb,YAAa,SAACC,GACVY,EAASC,YAAwBb,SAOzCI,EAFqBO,CAGvBzB,GAEawB","file":"static/js/4.40c5c04d.chunk.js","sourcesContent":["import React from 'react'\nimport {NavLink} from \"react-router-dom\";\nimport classes from \"../../../styles.module.scss\"\n\n\nconst DialogItem = props => {\n    let path = '/dialogs/' + props.id\n\n    return <div className={classes.dialogItem + '' + classes.active}>\n        <NavLink to={path} > {props.name} </NavLink>\n    </div>\n}\n\nexport default DialogItem","import React from 'react'\nimport classes from \"../../../styles.module.scss\"\n\nconst Message = props => {\n    return (\n        <div className={classes.messageItem}> { props.message } </div>\n    )\n}\n\nexport default Message","import React from 'react'\nimport {Field, reduxForm} from \"redux-form\";\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\n\nconst maxLength50 = maxLengthCreator(50)\n\nconst AddMessageForm = props => {\n\n    return (\n        <div>\n            <form onSubmit={props.handleSubmit}>\n                <div>\n                    <Field component={Textarea} validate={[maxLength50]} name={'dialogAddMessageForm'} placeholder={'Enter your message'} />\n                </div>\n                <button>Send message</button>\n            </form>\n        </div>\n    )\n}\n\nconst DialogsReduxForm = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm)\n\nexport default DialogsReduxForm","import React from 'react'\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport DialogsReduxForm from \"./DialogsForm/DialogsForm\";\nimport classes from \"../../styles.module.scss\"\n\nconst Dialogs = props => {\n    let state = props.dialogsPage\n\n    let dialogsElements = state.dialogs\n        .map( d => <DialogItem name={d.name} key={d.id} id={d.id}/>  )\n\n\n    let messagesElements = state.messages\n        .map( m => <Message message={m.message} key={m.id} /> )\n\n\n    let addNewMessage = values => {\n        props.sendMessage(values.dialogAddMessageForm)\n    }\n\n\n\n    return (\n        <div className={classes.Dialogs}>\n            <div className={classes.dialogsItems}>\n                { dialogsElements }\n            </div>\n\n\n            <div className={classes.messages}>\n                <div className={classes.messageItems}>\n                    <div>{messagesElements}</div>\n                </div>\n            </div>\n                    <div>\n                    <DialogsReduxForm onSubmit={addNewMessage} />\n                    </div>\n        </div>\n    )\n}\n\nexport default Dialogs","import React from 'react'\nimport {Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\n    let mapStateToPropsForRedirect = state => ({\n        isAuth: state.auth.isAuth\n    })\n\nexport const withAuthRedirect = Component => {\n\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Redirect to={'/login'}/>\n\n            return <Component {...this.props} />\n        }\n    }\n\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\n\n    return ConnectedAuthRedirectComponent\n}\n\nexport default withAuthRedirect\n","import React from 'react'\nimport Dialogs from \"./Dialogs\";\nimport {addMessageActionCreator} from \"../../redux/dialogs-reducer\";\nimport {connect} from \"react-redux\";\nimport withAuthRedirect from \"../../hoc/WithAuthRedirect\";\nimport {compose} from \"redux\";\n\n\n\nlet mapStateToProps = (state) => {\n    return {\n       dialogsPage: state.dialogsPage\n    }\n}\n\nlet mapDispatchToProps = dispatch => {\n    return {\n        // updateNewMessageText: body => {\n        //     dispatch(updateNewMessageTextActionCreator(body))\n        // },\n        sendMessage: (dialogAddMessageForm) => {\n            dispatch(addMessageActionCreator(dialogAddMessageForm))\n        }\n    }\n}\n\nconst DialogsContainer = compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect\n)(Dialogs)\n\nexport default DialogsContainer"],"sourceRoot":""}