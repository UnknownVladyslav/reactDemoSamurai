{"version":3,"sources":["components/Users/Users.module.css","components/Users/User/User.module.css","components/common/Paginator/Paginator.js","components/Users/User/User.js","components/Users/UsersList.js","components/Users/Users.js","redux/users-selectors.js","components/Users/UsersContainer.js"],"names":["module","exports","Paginator","currentPage","onPageChanged","totalItemsCount","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumder","leftPortionPageNumber","rightPortionNumber","className","classes","paginator","onClick","icon","faArrowLeft","arrowIcon","filter","p","map","selectedPage","pagesListItem","e","faArrowRight","User","user","followingInProgress","unfollow","follow","userCard","to","id","src","photos","small","userPhoto","alt","userName","name","followed","disabled","some","followButton","UsersList","users","usersList","u","Users","totalUsersCount","pageSize","props","loading","Loader","usersPage","getUsers","state","getTotalUsersCount","getCurrentPage","getLoading","getFollowingInProgress","UsersContainer","pageNumber","requestUsers","this","toggleFollowingProgress","React","Component","compose","connect","setCurrentPage"],"mappings":"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","file":"static/js/3.1bab720a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersPage\":\"Users_usersPage__3xdAn\",\"usersList\":\"Users_usersList__19LBE\",\"paginator\":\"Users_paginator__1zXC5\",\"pagesListItem\":\"Users_pagesListItem__2WyC_\",\"selectedPage\":\"Users_selectedPage__J63sh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userCard\":\"User_userCard__23GC4\",\"userName\":\"User_userName__3hmRF\",\"followButton\":\"User_followButton__19eGh\"};","import React, {useState} from 'react'\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faArrowLeft, faArrowRight} from \"@fortawesome/free-solid-svg-icons\";\nimport classes from './../../Users/Users.module.css'\n\nconst Paginator = ({currentPage, onPageChanged, totalItemsCount, portionSize = 10}) => {\n    let pagesCount = Math.ceil(totalItemsCount / portionSize)\n\n    let pages = []\n\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i)\n    }\n\n    let portionCount = Math.ceil(pagesCount / portionSize)\n    let [portionNumber, setPortionNumder] = useState(1)\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\n    let rightPortionNumber = portionNumber * portionSize\n\n    return <div className={classes.paginator}>\n        <ul>\n            { portionNumber > 1 &&\n            <button onClick={ () => setPortionNumder(portionNumber - 1)}><FontAwesomeIcon icon={faArrowLeft} className={classes.arrowIcon}/></button>\n            }\n            {pages\n                .filter(p => p >= leftPortionPageNumber && p <= rightPortionNumber)\n                .map(p => {\n                return <li key={p}\n                           className={`${currentPage === p && classes.selectedPage} ${classes.pagesListItem}`}\n                           onClick={e => {\n                               onPageChanged(p)\n                           }}>{p}</li>\n            })}\n            { portionCount > portionNumber &&\n            <button onClick={ () => setPortionNumder(portionNumber + 1)}><FontAwesomeIcon icon={faArrowRight} className={classes.arrowIcon}/></button>\n            }\n        </ul>\n    </div>\n}\n\nexport default Paginator","import React from 'react'\nimport {NavLink} from \"react-router-dom\";\nimport userPhoto from '../../../assets/images/avatar-batman-small.png'\nimport classes from './User.module.css'\n\n\nconst User = ({user, followingInProgress, unfollow, follow}) => {\n    return <div className={classes.userCard}>\n        <div>\n            <NavLink to={'/profile/' + user.id}><img\n                src={user.photos.small != null ? user.photos.small : userPhoto} alt='user photo'/></NavLink>\n        </div>\n\n        <div className={classes.userName}>{user.name}</div>\n        {/*<div>{user.status}</div>*/}\n\n        <div>{'country'}</div>\n        <div>{'city'}</div>\n\n        <div>\n            {user.followed ? <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\n                    unfollow(user.id)\n                }} className={classes.followButton}>Unfollow</button>\n\n                : <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\n                    follow(user.id)\n                }} className={classes.followButton}>Follow</button>}\n        </div>\n\n\n    </div>\n}\n\nexport default User","import React from 'react'\nimport User from \"./User/User\";\nimport classes from './Users.module.css'\n\n\nconst UsersList = ({followingInProgress, follow, unfollow, users}) => {\n    return <div className={classes.usersList}>\n        {\n        users.map( u => <User key={u.id} user={u}\n                             followingInProgress={followingInProgress}\n                             follow={follow} unfollow={unfollow}\n    />)\n\n        }\n    </div>\n}\nexport default UsersList","import React from 'react'\nimport Loader from \"../common/Loader/Loader\";\nimport Paginator from \"../common/Paginator/Paginator\";\nimport UsersList from \"./UsersList\";\nimport classes from './Users.module.css'\n\n\nconst Users = ({currentPage, onPageChanged, totalUsersCount, pageSize, ...props}) => {\n\n    if (props.loading) {\n        return <Loader/>\n    }\n\n    return <div className={classes.usersPage}>\n        <Paginator currentPage={currentPage} onPageChanged={onPageChanged}\n                   totalItemsCount={totalUsersCount} portionSize={pageSize}/>\n        <div>\n            <UsersList followingInProgress={props.followingInProgress}\n                       follow={props.follow} unfollow={props.unfollow}\n                       users={props.users}\n            />\n        </div>\n    </div>\n}\nexport default Users","export const getUsers = (state) => {\n    return state.usersPage.users\n}\n\nexport const pageSize = (state) => {\n    return state.usersPage.pageSize\n}\n\nexport const getTotalUsersCount = (state) => {\n    return state.usersPage.totalUsersCount\n}\n\nexport const getCurrentPage = (state) => {\n    return state.usersPage.currentPage\n}\n\nexport const getLoading = (state) => {\n    return state.usersPage.loading\n}\n\nexport const getFollowingInProgress = (state) => {\n    return state.usersPage.followingInProgress\n}\n","import React from 'react'\nimport {connect} from \"react-redux\";\nimport {\n    follow,\n    setCurrentPage,\n    unfollow, toggleFollowingProgress,\n    requestUsers\n} from \"../../redux/users-reducer\";\nimport Users from \"./Users\";\nimport Loader from \"../common/Loader/Loader\";\nimport {compose} from \"redux\";\nimport {\n    getCurrentPage,\n    getFollowingInProgress, getLoading,\n    getTotalUsersCount,\n    getUsers,\n    pageSize\n} from \"../../redux/users-selectors\";\n\n\n\n\nclass UsersContainer extends React.Component {\n\n    componentDidMount() {\n        let {currentPage, pageSize} = this.props\n        this.props.requestUsers(currentPage, pageSize)\n    }\n\n\n    onPageChanged = pageNumber => {\n        let {pageSize} = this.props\n         this.props.requestUsers(pageNumber, pageSize)\n    }\n\n    render() {\n\n        return <>\n            {this.props.loading ? <Loader/> :\n                <Users\n                    totalUsersCount={this.props.totalUsersCount}\n                    pageSize={this.props.pageSize}\n                    currentPage={this.props.currentPage}\n                    onPageChanged={this.onPageChanged}\n                    users={this.props.users}\n                    follow={this.props.follow}\n                    unfollow={this.props.unfollow}\n                    toggleFollowingProgress={this.props.toggleFollowingProgress}\n                    followingInProgress={this.props.followingInProgress}\n                    loading={this.props.loading}\n                />\n            }\n        </>\n    }\n}\n\nlet mapStateToProps = state => {\n    return {\n        users: getUsers(state),\n        pageSize: pageSize(state),\n        totalUsersCount: getTotalUsersCount(state),\n        currentPage: getCurrentPage(state),\n        loading: getLoading(state),\n        followingInProgress: getFollowingInProgress(state)\n    }\n}\n\n\nexport default compose(\n    connect(mapStateToProps,\n    {\n        follow,\n        unfollow,\n        setCurrentPage,\n        toggleFollowingProgress,\n        requestUsers\n    })\n)(UsersContainer)"],"sourceRoot":""}